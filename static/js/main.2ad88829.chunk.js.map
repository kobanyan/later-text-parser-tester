{"version":3,"sources":["Header.tsx","ErrorInfo.tsx","Form.tsx","Occurrences.tsx","Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","Box","component","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","Link","href","target","rel","color","underline","verticalAlign","display","fontSize","marginRight","ErrorInfo","React","memo","text","error","info","Array","map","concat","marginTop","paddingLeft","Form","count","onTextChange","onCountChange","noValidate","autoComplete","margin","TextField","id","label","value","inputProps","style","width","onChange","type","Occurrences","occurrences","List","dense","occurrence","index","ListItem","ListItemText","primary","toLocaleString","initialState","calculate","scheduleData","later","parse","schedule","next","Date","reducer","state","action","changeTextResult","payload","changeCountResult","Main","useReducer","dispatch","handleTextChange","useCallback","event","handleCountChange","Number","Grid","container","justifyContent","alignItems","rowSpacing","item","xs","Paper","padding","theme","createTheme","typography","fontFamily","join","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ad88829.chunk.js","sourcesContent":["import LaunchIcon from '@mui/icons-material/Launch';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport React from 'react';\n\nconst Header: React.FC = () => {\n  return (\n    <Box component=\"header\" sx={{ flexGrow: 1 }}>\n      <AppBar component=\"div\" position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n            @breejs/later Text Parser Tester\n          </Typography>\n          <Link\n            href=\"https://breejs.github.io/later/parsers.html#text\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            color=\"inherit\"\n            underline=\"none\"\n          >\n            <Typography\n              sx={{\n                verticalAlign: 'middle',\n                display: 'inline-flex',\n              }}\n            >\n              <LaunchIcon fontSize=\"small\" sx={{ marginRight: 1 }} />\n              Docs\n            </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\n\nexport default Header;\n","import Typography from '@mui/material/Typography';\nimport React from 'react';\n\nexport type ErrorInfoProps = {\n  text: string;\n  error: number;\n};\n\nconst ErrorInfo: React.FC<ErrorInfoProps> = React.memo(({ text, error }) => {\n  const info = [...new Array(error)].map(() => '\\u00A0').concat('^');\n  return (\n    <>\n      <Typography variant=\"h5\">Error</Typography>\n      <Typography sx={{ marginTop: 1, paddingLeft: 2 }}>{text}</Typography>\n      <Typography color=\"error\" sx={{ paddingLeft: 2 }}>\n        {info}\n      </Typography>\n    </>\n  );\n});\n\nexport default ErrorInfo;\n","import Box from '@mui/material/Box';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport React from 'react';\n\nexport type FormProps = {\n  text: string;\n  count: number;\n  onTextChange: Required<TextFieldProps>['onChange'];\n  onCountChange: Required<TextFieldProps>['onChange'];\n};\n\nconst Form: React.FC<FormProps> = React.memo(\n  ({ text, count, onTextChange, onCountChange }) => {\n    return (\n      <Box\n        component=\"form\"\n        noValidate\n        autoComplete=\"off\"\n        sx={{\n          '& .MuiTextField-root': { margin: 1 },\n        }}\n      >\n        <TextField\n          id=\"text\"\n          label=\"Text\"\n          value={text}\n          inputProps={{\n            style: {\n              width: '68em',\n            },\n          }}\n          onChange={onTextChange}\n        />\n        <TextField\n          id=\"count\"\n          label=\"Count\"\n          type=\"number\"\n          value={count}\n          inputProps={{\n            style: {\n              width: '3em',\n            },\n          }}\n          onChange={onCountChange}\n        />\n      </Box>\n    );\n  }\n);\n\nexport default Form;\n","import List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\nimport React from 'react';\n\nexport type OccurrencesProps = {\n  occurrences: Date[];\n};\n\nconst Occurrences: React.FC<OccurrencesProps> = React.memo(\n  ({ occurrences }) => {\n    return (\n      <>\n        <Typography variant=\"h5\">Occurrences</Typography>\n        <List dense>\n          {occurrences.map((occurrence, index) => (\n            <ListItem key={index}>\n              <ListItemText primary={occurrence.toLocaleString()} />\n            </ListItem>\n          ))}\n        </List>\n      </>\n    );\n  }\n);\n\nexport default Occurrences;\n","import later from '@breejs/later';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport React from 'react';\n\nimport ErrorInfo from './ErrorInfo';\nimport Form, { FormProps } from './Form';\nimport Occurrences from './Occurrences';\n\nconst initialState = {\n  text: '',\n  count: 1,\n  error: -1,\n  occurrences: [] as Date[],\n};\n\ntype ChangeTextAction = {\n  type: 'changeText';\n  payload: string;\n};\n\ntype ChangeCountAction = {\n  type: 'changeCount';\n  payload: number;\n};\n\ntype Action = ChangeTextAction | ChangeCountAction;\n\nconst calculate = ({ text, count }: { text: string; count: number }) => {\n  const scheduleData = later.parse.text(text);\n  const occurrences = later.schedule(scheduleData).next(count);\n  return {\n    error: scheduleData.error,\n    occurrences:\n      occurrences instanceof Date\n        ? [occurrences]\n        : occurrences\n        ? occurrences\n        : [],\n  };\n};\n\nconst reducer = (state: typeof initialState, action: Action) => {\n  switch (action.type) {\n    case 'changeText':\n      const changeTextResult = calculate({\n        text: action.payload,\n        count: state.count,\n      });\n      return {\n        ...state,\n        text: action.payload,\n        error: changeTextResult.error,\n        occurrences: changeTextResult.occurrences,\n      };\n    case 'changeCount':\n      const changeCountResult = calculate({\n        text: state.text,\n        count: action.payload,\n      });\n      return {\n        ...state,\n        count: action.payload,\n        error: changeCountResult.error,\n        occurrences: changeCountResult.occurrences,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst Main: React.FC = () => {\n  const [{ text, count, error, occurrences }, dispatch] = React.useReducer(\n    reducer,\n    initialState\n  );\n  const handleTextChange = React.useCallback<FormProps['onTextChange']>(\n    (event) => {\n      dispatch({ type: 'changeText', payload: event.target.value });\n    },\n    []\n  );\n  const handleCountChange = React.useCallback<FormProps['onCountChange']>(\n    (event) => {\n      dispatch({ type: 'changeCount', payload: Number(event.target.value) });\n    },\n    []\n  );\n  return (\n    <Grid\n      component=\"main\"\n      container\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      rowSpacing={2}\n      margin={2}\n    >\n      <Grid item xs={8}>\n        <Paper\n          sx={{\n            padding: 2,\n          }}\n        >\n          <Form\n            text={text}\n            count={count}\n            onTextChange={handleTextChange}\n            onCountChange={handleCountChange}\n          />\n        </Paper>\n      </Grid>\n      <Grid item xs={8}>\n        <Paper\n          sx={{\n            padding: 2,\n          }}\n        >\n          {error > -1 ? (\n            <ErrorInfo text={text} error={error} />\n          ) : (\n            <Occurrences occurrences={occurrences} />\n          )}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Main;\n","import CssBaseline from '@mui/material/CssBaseline';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport React from 'react';\n\nimport Header from './Header';\nimport Main from './Main';\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: ['Roboto Mono'].join(', '),\n  },\n});\n\nconst App: React.FC = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Header />\n      <Main />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}